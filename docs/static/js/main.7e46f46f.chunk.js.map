{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useMyInput","setCategories","useState","inputValue","setInputValue","handleInputChange","e","target","value","handleSubmit","preventDefault","handleInput","key","className","trim","length","cats","filter","n","AddCategory","input1","input2","onSubmit","type","onChange","onKeyPress","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7e46f46f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useMyInput = (setCategories) =>{\r\n    const [inputValue,setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleInput = (e) =>{\r\n        if(e.key === \"Enter\"){\r\n            if(e.target.className === \"input1\"){\r\n                if(inputValue.trim().length > 2){\r\n                    setCategories(cats => [inputValue,...cats]);\r\n                    setInputValue('');\r\n                }\r\n            } else{\r\n                setCategories(cats => cats.filter(n => n !== inputValue))\r\n                setInputValue('');\r\n            }\r\n           \r\n        }\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n    }\r\n    return {\r\n        handleInputChange,\r\n        handleSubmit,\r\n        inputValue,\r\n        handleInput\r\n    }\r\n}\r\nexport const AddCategory = ({setCategories}) => {\r\n    const {handleSubmit} = useMyInput(setCategories)\r\n    const input1 = useMyInput(setCategories);\r\n    const input2 = useMyInput(setCategories);\r\n    return (\r\n        <form onSubmit = {handleSubmit}> \r\n            <label>Ingresa una serie:</label>\r\n            <input\r\n             className = \"input1\"\r\n             type=\"text\"\r\n             value = {input1.inputValue}\r\n             onChange = {input1.handleInputChange}\r\n             onKeyPress = {input1.handleInput}\r\n            />\r\n            <label>Borra una serie de la lista:</label>\r\n            <input\r\n             type=\"text2\"\r\n             value = {input2.inputValue}\r\n             onChange = {input2.handleInputChange}\r\n             onKeyPress = {input2.handleInput}\r\n            />\r\n            <button className=\"boton\">Borrar</button>\r\n        </form>    \r\n        \r\n        \r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=4nhnayaFY5RZcPH1vo8yMKHdIW3g4myz`\r\n    const resp = await fetch(url)\r\n    const data = (await resp.json()).data\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(\"holanda\")\r\n    return gifs;\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img className=\"card-img\" src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    console.log(\"Holanz\")\r\n    return (\r\n        <>\r\n        <h3 className =\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n             images.map( img => (\r\n                <GifGridItem\r\n                 key = {img.id}\r\n                 {...img}\r\n                 />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            }, 3000);\r\n\r\n\r\n        })\r\n    },[category])\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    return(\r\n        <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories = {setCategories}/>\r\n         <hr/>\r\n         \r\n         <ol>\r\n             {\r\n                 categories.map((category) => \r\n                      <GifGrid \r\n                      category = {category}\r\n                      key = {category}\r\n                      />\r\n                 )\r\n             }\r\n         </ol>\r\n        </>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nconst divRoot = document.getElementById(\"root\");\n\nReactDOM.render(<GifExpertApp/>,divRoot);\n\n\nreportWebVitals();\n\n"],"sourceRoot":""}